name: Push

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

on:
  push:
    branches:
      - conda
      - main
    paths:
      - "projects/**"
      - "cli/**"
      - ".github/**"

jobs:
  build-docs:
    name: Build Main Documentation
    uses: ./.github/workflows/build-docs.yml
    with:
      environment_name: ${{ github.ref_name }}
      deployment_type: push
    permissions:
      contents: read
      pages: write
      id-token: write

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-docs
    environment:
      name: ${{ github.ref_name }}
      url: ${{ needs.build-docs.outputs.deploy-url }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download build artifact
        run: |
          # The build artifacts are in _build directory from the reusable workflow
          echo "Build artifacts prepared by reusable workflow"
          ls -la _build/ || echo "No _build directory found - checking for alternative structure"

      - name: Checkout edbook.github.io
        uses: actions/checkout@v4
        with:
          repository: 'edbook/edbook.github.io'
          path: org-repo
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Re-run build (temporary solution)
        run: |
          # Since we can't easily pass build artifacts between workflows,
          # we'll re-run a simplified build here
          # TODO: Optimize this by using artifacts properly
          
          # Setup conda quickly
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
          conda env create -f environment.yml
          source activate edbook
          
          # Build using new approach
          mkdir -p _build
          cd projects
          
          for project in */; do
            if [ -d "$project" ] && [ -f "$project/conf.py" ]; then
              echo "Building $project for production..."
              
              # Create hover terms file if missing
              if [ ! -f "$project/LIST_OF_HOVER_TERMS.json" ]; then
                echo "[]" > "$project/LIST_OF_HOVER_TERMS.json"
              fi
              
              cd "$project"
              sphinx-build -b html . "../../_build/$project" --keep-going || echo "Build failed for $project, continuing..."
              cd ..
            fi
          done
          
          cd ..
          
          # Move forsida to root if it exists
          if [ -d "_build/forsida" ]; then
            echo "Moving forsida to root for production"
            cp -r _build/forsida/* _build/
            rm -rf _build/forsida
          fi

      - name: Push to edbook.github.io
        run: |
          # Sync build to production repository
          rsync -avh --delete _build/ ./org-repo/
          cd org-repo
          
          # Configure git
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          # Commit and push
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "${{ github.event.head_commit.message }}" -m "Version: ${{ needs.build-docs.outputs.version }}" -m "https://github.com/edbook/haskoli-islands/commit/$GITHUB_SHA"
            git push
            echo "Successfully deployed to production"
          fi

  notify-discord-push:
    needs: [build-docs, deploy-production]
    name: Notify Discord (push to main)
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Notify push
        run: |
          content_title="Ný útgáfa er kominn í loftið 🎉"
          title="Push to ${{ github.ref_name }}"
          color=32768
          description="${{ github.event.head_commit.message }}"
          url="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          author_name="${{ github.event.head_commit.author.name }}"
          author_url="https://github.com/${{ github.event.head_commit.author.username }}"
          author_avatar="https://github.com/${{ github.event.head_commit.author.username }}.png"
          branch=${{ github.ref_name }}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": $color,
                "fields": [
                  {
                    "name": "Version",
                    "value": "${{ needs.build-docs.outputs.version }}"
                  },
                  {
                    "name": "url",
                    "value": "[Skoða á edbook](https://edbook.hi.is)"
                  }
                ],
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"

  notify-discord-build-failed:
    needs: [build-docs, deploy-production]
    if: always() && (needs.build-docs.result == 'failure' || needs.deploy-production.result == 'failure') && github.event_name == 'push'
    name: Notify Discord (build failed)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Notify build or deploy failed
        run: |
          workflow_url="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          content_title="Eitthvað fór úrskeiðis ☠️"
          title="${{ github.ref_name }}"
          color=16711680
          description="Ekki tókst að byggja og/eða deploya branchinu _${{ github.ref_name }}_"
          url="$workflow_url"
          author_name=${{ github.event.push.sender.login}}
          author_url=${{ github.event.push.sender.url}}
          author_avatar=${{ github.event.push.sender.avatar_url}}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": $color,
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"