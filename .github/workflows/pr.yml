name: Pull request
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write
concurrency:
  group: "pages"
  cancel-in-progress: false
on:
  pull_request:
    branches: [main, conda]
    types: [opened, synchronize, labeled]
    paths:
      - "projects/**"
      - "cli/**"
      - ".github/**"
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      deploy-url: ${{ steps.deployment.outputs.page_url }}
      version: ${{ steps.calver.outputs.version }}
    environment:
      name: ${{ github.head_ref }}
      url: ${{ steps.deployment.outputs.page_url }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Generate PR Calver version
        id: calver
        run: |
          # Generate Calver in YY.M.DD.increment+[git short sha] format for PRs (PEP 440 compliant)
          today=$(date +'%y.%-m.%-d')
          short_sha=$(git rev-parse --short HEAD)
          
          # For PRs, we use a build number based on the current hour/minute to ensure uniqueness
          build_num=$(date +'%H%M')
          
          # Use PEP 440 compliant format: YY.M.DD.increment+gitSHA (local version identifier)
          version="${today}.${build_num}+${short_sha}"
          
          echo "Generated PR version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT
          
          # Update setup.py with the PR version
          sed -i.bak "s/version=\"[^\"]*\"/version=\"$version\"/" cli/setup.py
          echo "Updated setup.py with version: $version"
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          echo ${{ github.head_ref }}
          slug=$(./.github/slugify.sh ${{ github.head_ref || github.ref_name }})
          echo "BRANCH_SLUG=$slug" >> $GITHUB_ENV
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: false
          python-version: 3.10.10
          channels: conda-forge,defaults
          #       mamba-version: "*"
          channel-priority: true
          #       use-mamba: false
          environment-file: environment.yml
          activate-environment: edbook
      # TODO: needs work
      # - name: Check for Conda cache
      #   id: conda-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: conda-${{ runner.os }}-${{hashFiles('environment.yml')}}
      - name: 🚧 Build versioned documentation
        id: build-versioned
        run: |
          # Build documentation with version structure
          # Create versioned docs directory structure
          mkdir -p versioned-docs/main versioned-docs/${{ env.BRANCH_SLUG }}
          
          # Build each project into the main branch directory
          cd projects
          for project in */; do
            if [ -d "$project" ] && [ -f "$project/conf.py" ]; then
              echo "Building project: $project"
              mkdir -p "../versioned-docs/main/$project"
              mkdir -p "../versioned-docs/${{ env.BRANCH_SLUG }}/$project"
              
              # Create empty hoverlist file if missing (for sphinxcontrib-hoverrole)
              if [ ! -f "$project/LIST_OF_HOVER_TERMS.json" ]; then
                echo "[]" > "$project/LIST_OF_HOVER_TERMS.json"
                echo "Created empty LIST_OF_HOVER_TERMS.json for $project"
              fi
              
              # Verify the file was created and has valid JSON
              if [ -f "$project/LIST_OF_HOVER_TERMS.json" ]; then
                if ! python3 -m json.tool "$project/LIST_OF_HOVER_TERMS.json" > /dev/null 2>&1; then
                  echo "Invalid JSON in LIST_OF_HOVER_TERMS.json for $project, recreating..."
                  echo "[]" > "$project/LIST_OF_HOVER_TERMS.json"
                fi
              fi
              
              # Build for main version (current PR content) with error handling
              echo "Building $project for branch ${{ env.BRANCH_SLUG }}..."
              cd "$project"
              if ! sphinx-build -b html . "../../versioned-docs/${{ env.BRANCH_SLUG }}/$project" --keep-going; then
                echo "Warning: Build failed for $project on branch ${{ env.BRANCH_SLUG }}, continuing..."
              fi
              cd ..
              
              # For now, also copy to main (we'll improve this later)
              echo "Building $project for main branch..."
              cd "$project"
              if ! sphinx-build -b html . "../../versioned-docs/main/$project" --keep-going; then
                echo "Warning: Build failed for $project on main branch, continuing..."
              fi
              cd ..
            fi
          done
          
          # Go back to root directory to create index page
          cd ..
          
          # Create a simple version selector page
          cat > versioned-docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="is">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Edbook Documentation - Version Selector</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; max-width: 800px; margin: 2rem auto; padding: 0 1rem; }
                  .header { text-align: center; margin-bottom: 3rem; }
                  .version-section { margin-bottom: 2rem; padding: 1.5rem; border: 1px solid #e1e4e8; border-radius: 6px; }
                  .version-title { color: #0366d6; font-size: 1.25rem; font-weight: 600; margin-bottom: 1rem; }
                  .project-links { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 1rem; }
                  .project-link { display: block; padding: 0.75rem 1rem; background: #f6f8fa; border-radius: 4px; text-decoration: none; color: #24292e; border: 1px solid #e1e4e8; }
                  .project-link:hover { background: #e1e4e8; text-decoration: none; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>📚 Edbook Documentation</h1>
                  <p>Select a version and project to view the documentation</p>
              </div>
              
              <div class="version-section">
                  <div class="version-title">🚀 Development Branch (ci-improvements)</div>
                  <div class="project-links">
                      <a href="ci-improvements/stae205g/" class="project-link">STÆ205G - Tölfræðileg gagnavinnsla og líkanagerð</a>
                      <a href="ci-improvements/R_fra_grunni/" class="project-link">R frá grunni</a>
                  </div>
              </div>
              
              <div class="version-section">
                  <div class="version-title">📖 Main Branch (stable)</div>
                  <div class="project-links">
                      <a href="main/stae205g/" class="project-link">STÆ205G - Tölfræðileg gagnavinnsla og líkanagerð</a>
                      <a href="main/R_fra_grunni/" class="project-link">R frá grunni</a>
                  </div>
              </div>
          </body>
          </html>
          EOF
            
      - name: 📂 Prepare versioned pages for deployment
        run: |
          # For PR deployments, use the forsida project as the main landing page
          # This matches the structure of the main edbook.github.io site
          
          # Check if forsida project was built successfully and has content
          if [ -d "versioned-docs/${{ env.BRANCH_SLUG }}/forsida" ] && [ -f "versioned-docs/${{ env.BRANCH_SLUG }}/forsida/index.html" ]; then
            echo "Using forsida project as main landing page"
            # Copy forsida content to root (this becomes the main index)
            cp -r versioned-docs/${{ env.BRANCH_SLUG }}/forsida/* versioned-docs/
            
            # Copy all other projects to root level for easy access
            for project_dir in versioned-docs/${{ env.BRANCH_SLUG }}/*/; do
              project_name=$(basename "$project_dir")
              if [ "$project_name" != "forsida" ] && [ -d "$project_dir" ]; then
                echo "Copying project: $project_name"
                cp -r "$project_dir" "versioned-docs/$project_name"
              fi
            done
          else
            echo "Forsida project not found, using fallback structure"
            # Fallback: copy all branch-specific content to root
            cp -r versioned-docs/${{ env.BRANCH_SLUG }}/* versioned-docs/
          fi
          
          # Create a simple version comparison page
          cat > versioned-docs/versions.html << 'EOF'
          <!DOCTYPE html>
          <html lang="is">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Edbook Documentation - Version Comparison</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; max-width: 800px; margin: 2rem auto; padding: 0 1rem; }
                  .header { text-align: center; margin-bottom: 3rem; }
                  .version-section { margin-bottom: 2rem; padding: 1.5rem; border: 1px solid #e1e4e8; border-radius: 6px; }
                  .version-title { color: #0366d6; font-size: 1.25rem; font-weight: 600; margin-bottom: 1rem; }
                  .branch-badge { display: inline-block; padding: 0.25rem 0.5rem; background: #28a745; color: white; border-radius: 3px; font-size: 0.75rem; margin-left: 0.5rem; }
                  .back-link { display: inline-block; margin-bottom: 1rem; color: #0366d6; text-decoration: none; }
                  .back-link:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="header">
                  <a href="./" class="back-link">← Back to Documentation</a>
                  <h1>📚 Edbook Documentation Versions</h1>
                  <p>Compare different versions of the documentation</p>
              </div>
              
              <div class="version-section">
                  <div class="version-title">
                      🚀 Current Branch 
                      <span class="branch-badge">${{ env.BRANCH_SLUG }}</span>
                  </div>
                  <p>You are currently viewing this branch. This contains the latest changes from the pull request.</p>
                  <p><a href="./">← View this version</a></p>
              </div>
              
              <div class="version-section">
                  <div class="version-title">📖 Main Branch (Production)</div>
                  <p>View the current production version of the documentation.</p>
                  <p><a href="https://edbook.github.io/" target="_blank">View main version →</a></p>
              </div>
          </body>
          </html>
          EOF
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: versioned-docs
      - name: 📂 Deploy feature to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true

  announce-url:
    name: Announce feature url
    runs-on: ubuntu-latest
    needs: setup
    # if: github.event.action == 'opened'
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Your deployment is here

      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 📚 Versioned Documentation Deployed
            
            Your PR documentation is available with version selector:
            
            **🔗 PR Documentation:** ${{needs.setup.outputs.deploy-url}}
            **🔗 Individual Projects:** Available at ${{needs.setup.outputs.deploy-url}}[project-name]/
            
            **✨ New Features:**
            - Version selector dropdown on every page
            - Easy switching between main and PR versions
            - Professional ReadTheDocs-style navigation
            
            **Version:** `${{ needs.setup.outputs.version }}`
          reactions: rocket

      # - name: Update comment
      #   if: steps.fc.outputs.comment-id != ''
      #   uses: peter-evans/create-or-update-comment@v2
      #   with:
      #     comment-id: ${{ steps.fc.outputs.comment-id }}
      #     body: |
      #       Your deployment is here ${{needs.build-all.outputs.deploy-url}}
      #     reactions: hooray

  notify-discord-pr:
    name: Notify Discord (open PR)
    runs-on: ubuntu-20.04
    needs: [setup]
    if: github.event.action == 'opened'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Notify open PR
        run: |
          content_title="Nýtt PR opnað"
          title="${{ github.event.pull_request.title }}"
          color=2061822
          description="${{ github.event.pull_request.body }}"
          url=${{ github.event.pull_request.html_url }}
          author_name=${{ github.event.pull_request.user.login}}
          author_url=${{ github.event.pull_request.user.url}}
          author_avatar=${{ github.event.pull_request.user.avatar_url}}
          branch=${{ github.head_ref }}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": $color,
                "fields": [
                  {
                    "name": "url",
                    "value": "[Skoða á edbook](https://edbook.hi.is/staging/edbook/${branch})"
                  }
                ],
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"
