name: Pull request
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write
concurrency:
  group: "pages"
  cancel-in-progress: false
on:
  pull_request:
    branches: [main, conda]
    types: [opened, synchronize, labeled]
    paths:
      - "projects/**"
      - "cli/**"
      - ".github/**"
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      deploy-url: ${{ steps.deployment.outputs.page_url }}${{ env.BRANCH_SLUG }}
    environment:
      name: ${{ github.head_ref }}
      url: ${{ steps.deployment.outputs.page_url }}${{ env.BRANCH_SLUG }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          echo ${{ github.head_ref }}
          slug=$(./.github/slugify.sh ${{ github.head_ref || github.ref_name }})
          echo "BRANCH_SLUG=$slug" >> $GITHUB_ENV
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          python-version: 3.10.10
          channels: conda-forge,defaults
          mamba-version: "*"
          channel-priority: true
          use-mamba: true
          environment-file: environment.yml
          activate-environment: edbook
      # TODO: needs work
      # - name: Check for Conda cache
      #   id: conda-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: conda-${{ runner.os }}-${{hashFiles('environment.yml')}}
      - name: ðŸš§ Build all (pr)
        # if: github.event_name == 'pull_request' && github.event.label.name == 'build-all'
        id: build-all
        run: |
          edbook build --all
      - name: ðŸ“‚ Prepare pages for feature deployment
        run: |
          rsync -avh _build/forsida/ ./_build/
          rm -rf _build/forsida
          rsync -avh --mkpath _build/ dist/${{ env.BRANCH_SLUG }}/
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: dist
      - name: ðŸ“‚ Deploy feature to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          preview: true

  announce-url:
    name: Announce feature url
    runs-on: ubuntu-latest
    needs: setup
    # if: github.event.action == 'opened'
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Your deployment is here

      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Your deployment is here ${{needs.setup.outputs.deploy-url}}
          reactions: rocket

      # - name: Update comment
      #   if: steps.fc.outputs.comment-id != ''
      #   uses: peter-evans/create-or-update-comment@v2
      #   with:
      #     comment-id: ${{ steps.fc.outputs.comment-id }}
      #     body: |
      #       Your deployment is here ${{needs.build-all.outputs.deploy-url}}
      #     reactions: hooray

  notify-discord-pr:
    name: Notify Discord (open PR)
    runs-on: ubuntu-20.04
    needs: [setup]
    if: github.event.action == 'opened'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Notify open PR
        run: |
          content_title="NÃ½tt PR opnaÃ°"
          title="${{ github.event.pull_request.title }}"
          color=2061822
          description="${{ github.event.pull_request.body }}"
          url=${{ github.event.pull_request.html_url }}
          author_name=${{ github.event.pull_request.user.login}}
          author_url=${{ github.event.pull_request.user.url}}
          author_avatar=${{ github.event.pull_request.user.avatar_url}}
          branch=${{ github.head_ref }}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": "$color",
                "fields": [
                  "name": "url",
                  "value": "[SkoÃ°a Ã¡ edbook](https://edbook.hi.is/staging/edbook/${branch})"
                ]
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"
