In line: :math:`\lim_{x\to a^-} f(x) = \pm \infty`, or

.. math::
    \overline{x}=\frac{M_{x=0}}{m} = \frac{\sum_{i=1}^n x_im_i}{\sum_{i=1}^n m_i}.


.. ggb:: xhyhu5fb
    





Undirbúningur
=============

Anaconda
--------

Fyrsta verk er að setja upp `Conda <https://conda.io>`_ sem er pakkastjóri 
fyrir Python og fleiri forritunarmál. Hentugast er að gera það 
með því að setja upp 
`Anaconda <https://anaconda.org>`_ eða 
`Miniconda <https://docs.conda.io/en/latest/miniconda.html>`_. 
Miniconda er minni og dugar fínt hér. En fyrir þau sem ætla að nota 
Python í vísindalega útreikninga þá er Anaconda hugsanlega álitlegra, 
sjá `Anaconda vs. Miniconda <https://docs.conda.io/projects/conda/en/stable/user-guide/install/download.html#anaconda-or-miniconda>`_.

Hægt er að hlaða þeim niður hér:

* Miniconda: https://docs.conda.io/en/main/miniconda.html#latest-miniconda-installer-links

* Anaconda: https://docs.anaconda.com/anaconda/install/


Pakkastjórar
~~~~~~~~~~~~

Einnig er mögulegt að nota pakkastjóra til að setja upp Miniconda/Anaconda. 

Á Windows er hægt að nota `Winget <https://learn.microsoft.com/en-us/windows/package-manager/winget/>`_, 
þ.e. opna skjhermi (terminal) og skrifa

.. code-block::
   
    winget install --id=Anaconda.Miniconda3  -e

eða 

.. code-block::

   winget install -e --id Anaconda.Anaconda3

Sambærilegar skipanir eru til í flestum Linux-útgáfum. 

Ritill 
------

Við þurfum einhvern góðan textaritil, t.d. `Visual Studio Code <https://code.visualstudio.com/>`_.
En einnig má nota *Vim*, *Nvim*, *Emacs*, *Sublime* o.s.frv.

Git
---

Næsta mál er að setja upp `Git <https://git-scm.com/>`_. Það má gera það hvort sem er með 
því að hlaða forritinu niður hér, https://git-scm.com/download/win, eða með því að nota
pakkastjóra

.. code-block::

    winget install -e --id Git.Git

Sambærilegar skipanir eru til í flestum Linux-útgáfum:

.. code-block::

    apt-get install git

og þeir sem nota Homebrew á MacOS keyra:

.. code-block::

    brew install git

.. youtube:: 2ReR1YJrNOM

Edbook hlaðið niður
-------------------

Nú þarf að hlaða niður öllum skránum frá https://github.com/edbook/haskoli-islands 
og er það gert með Git. Í VSCode er smellt á Git-merkið vinstra megin og 
valið *Clone repository*. Þá er slegið inn `https://github.com/edbook/haskoli-islands`,
ýtt á Enter, valin mappa þar sem geyma á skrárnar og smellt á Ok.
Þegar búið er að hlaða þeim niður þá er smellt á *Open*.

.. note::
   Í VSCode er hægt að opna heila möppu í einu og flakka á milli skráa með valmyndinni 
   vinstra megin. Það er ráðlegt að gera þetta frekar en að opna stakar skrár, þ.e. fara í
   *File->Open Folder* og opna *haskoli-islands*-möppuna. 

.. image:: myndir/vscode-git.png

Conda-umhverfi sett upp
-----------------------

Næst er að setja upp Conda-umhverfið sem inniheldur allt sem þarf til að 
þýða (compile) nóturnar. Í VSCode er smellt á *Terminal* og svo
*New Terminal*. Þá birtist skjáhermir niðri þar sem við keyrum

.. code-block:: 

   conda env create -f environment.yml

Þetta tekur smástund því Conda er að ná í alla pakkana sem til þarf.

Næst þarf að virkja umhverfið með 

.. code-block::

   conda activate edbook

.. Note::
    
    Það ætti að standa *(edbook)* fremst í skipanalínunni 

Stillingar fyrir nýtt verkefni
------------------------------

Smellið á  *projects* og veljið möppuna með nýja verkefninu og smellið þar á *conf.py*.
Þar þarf að breyta línum 9, 10, 11 og 12. Að öðru leyti ætti ekki að þurfa að breyta þessari skrá. 

Línurnar sem þarf að breyta

.. code-block:: 
   :lineno-start: 8

   #################### PROJECT ######################
   project = "Sniðmát fyrir Edbook (TMP001G)"
   projectid = "tmp001g"
   copyright = "2023, Jónmundur Gunnuson"
   author = "Jónmundur Gunnuson <asdf@hi.is>"
   year = str(datetime.datetime.now().year)
   version = year  # The short X.Y version.
   release = year  # The full version, including alpha/beta/rc tags.
   ###################################################




Búa til nýtt verkefni
=====================

Nýtt Git-branch
-----------------------

Það telst ekki góð latína að vinna á main-greininni á Git. Það er því ráðlagt að búa til 
nýja grein (branch) fyrir nýja verkefnið. Í VSCode er smellt á *Main* neðst til vinstri, 
skrifið nafnið á verkefninu (ef um er að ræða nótur fyrirnámskeið þá er númerið á því upplagt
nafn) og smellið á *Create new branch*. Framvegis er svo hægt að fylgjast með neðst til vinstri 
í hvaða grein er verið að vinna.

.. image:: myndir/vscode-branch.png

Hér er aðeins farið í það hvernig unnið er með Git í VSCode

.. youtube:: i_23KUAEtUM

Afrita tmp001
-------------

Nú þarf að afrita möppuna `tmp001g` sem er í `haskoli-islands/projects`-möppunni yfir í nýja möppu svo
hægt sé að byrja að 

.. code-block:: 

   cp projects/tmp001g projects/new001g

þar sem *new001g* er heitið á nýja verkefninu. 


Kafli
=====

Undirkafli
----------

Undir-undirkafli
~~~~~~~~~~~~~~~~

Undir-undir-undirkafli
++++++++++++++++++++++



Display images (supports at least pdf, jpg, jpeg and svg):

.. figure:: ./myndir/pallas.svg
  :align: center
  :width: 70%

.. note::
  Colored boxed are

    - *attention* (athugið), blue
    - *caution* (aðgát), orange
    - *danger* (hætta), red
    - *error* (villa), red
    - *hint* (vísbending), green
    - *important* (mikilvægt), blue
    - *note* (athugasemd), blue
    - *tip* (dæmi), green
    - *warning* (aðvörun), orange

Viðbætur
==========

Geogebra
--------

Hægt er að greypa inn Geogebra-forrit með `sphinxcontrib-geogebra 
<https://github.com/edbook/sphinxcontrib-geogebra>`_ viðbótinni.
Vista þarf Geogebra-skjalið á geogebra.org þar sem það fær auðkenni, en auðkennið 
er aftasti hlutinn af vefslóðinni.
Forritið er svo sett inn með: 

.. code-block::

  .. ggb:: abcdefgh


Sjá https://github.com/edbook/sphinxcontrib-geogebra#options fyrir fleiri stillingar.

Dæmi
~~~~

.. ggb:: mkyudgwh

Togglebutton
------------

.. admonition:: Útleiðasla á hreyfijöfnum
    :class: setning, dropdown

    Hröðun er afleiða hraðans og því má lýsa sem afleiðujöfnu:

    .. math::
      \begin{aligned}
        &\text{Upphaflega jafnan} &    a &=\frac{dv(t)}{dt} \\
        &\text{Umritum} &    dv(t) &=  a\cdot dt \\
        &\text{Heildum beggja vegna} &     \int_0^t dv &= a \cdot \int_0^t dt \\
        &\text{ } &       v(t)-v(0) &= a\cdot (t-0) \\
        &\text{} & v(t) &= a\cdot t +v_0
      \end{aligned}

    sem er einmitt jafnan fyrir hraða sem fall af tíma.


Takkar fyrir hlekki (sphinxcontrib-custombutton)
------------------------------------------------

Viðbótin `sphinxcontrib-custombutton <https://github.com/sphinxcontrib-custombutton>`_ 
er fyrir sérsniðna takka með hlekkjum. Skráin ``_static/button.css`` geymir stillingar
fyrir útlit takkans. 

.. button::
  :text: Edbook home page
  :link: http://edbook.hi.is

Panopto
-------

Hægt er að greypa inn Panopto-myndbönd með 

.. code-block::
    
    .. panopto:: ab027f4b-88b9-4647-af20-afdf0092304d
        :width: 100%
        :height: 400

Hér er `ab027f4b-88b9-4647-af20-afdf0092304d` auðkennið sem myndbandið hefur á 
Panopto-þjóninum. Til að finna það þá er best að fara inn á hi.cloud.panopto.eu
finna myndbandið og smella á `Settings` og undir `Viewer Link` er auðkennið það sem
stendur fyrir aftan `id=`. 

.. panopto:: ab027f4b-88b9-4647-af20-afdf0092304d
    :width: 100%

Youtube
-------



Math - Katex
------------
Math on page is rendered with Katex.
Katex is faster in works for almost all latex syntax, there are documented cases of examples
known to cause troubles in the katex-extension sub-directory

In line: :math:`\lim_{x\to a^-} f(x) = \pm \infty`, or

.. math::
    \overline{x}=\frac{M_{x=0}}{m} = \frac{\sum_{i=1}^n x_im_i}{\sum_{i=1}^n m_i}.


Datacamp extensions
-------------------

Python
~~~~~~

.. datacamp::
    :lang: python

    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib.animation as animation

    fig = plt.figure()

    def f(x, y):
        return np.sin(x) + np.cos(y)

    x = np.linspace(0, 2 * np.pi, 120)
    y = np.linspace(0, 2 * np.pi, 100).reshape(-1, 1)

    im = plt.imshow(f(x, y), animated=True)

    def updatefig(*args):
        global x, y
        x += np.pi / 15.
        y += np.pi / 20.
        im.set_array(f(x, y))
        return im,

    ani = animation.FuncAnimation(fig, updatefig, interval=50, blit=True)
    plt.show()

R
~~~

.. datacamp::
    :lang: r

    options(scipen=999)  # turn-off scientific notation like 1e+48
    library(ggplot2)
    theme_set(theme_bw())  # pre-set the bw theme.
    data("midwest", package = "ggplot2")

    gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
        geom_point(aes(col=state, size=popdensity)) +
        geom_smooth(method="loess", se=F) +
        xlim(c(0, 0.1)) +
        ylim(c(0, 500000)) +
        labs(subtitle="Area Vs Population",
        y="Population",
        x="Area",
        title="Scatterplot",
        caption = "Source: midwest")

    gg

Hoverrole Extension
-------------------

Þetta er texti um :hover:`stærðfræðigreiningu,stærðfræðigreining` og :hover:`afleiðujöfnur, deildajafna`. Fleiri hugtök: :hover:`heildi`, :hover:`ferill`, :hover:`vörpun`.

Auto-generated list of translated terms:

.. hoverlist::

Google Analytics Extension
----------------------------
This extension enables the use of Google Analytics by inserting the tracking code on each page (except the index) and by inserting your tracking ID inside conf.py you should be able to monitor the use of your site.

This extension also tracks how far users have scrolled on the page. When a new section is scrolled into view a Google Analytics event is fired. These events can be seen in real time in the Javascript console (Chrome: CTRL+Shift+I OR Options-> More Tools -> Developer Tools).
